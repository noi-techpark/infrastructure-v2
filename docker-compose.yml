version: "3.4"

services:
  mosquitto:
    image: eclipse-mosquitto:2.0.12
    ports:
      - "${EXPOSED_INBOUND_MQTT_PORT}:1883"
    volumes:
      - ./mosquitto.inbound.conf:/mosquitto.conf:Z
      - ./mosquitto/data:/mosquitto/data:Z
    command: "mosquitto -c /mosquitto.conf"

  rabbitmq-outbound:
    image: rabbitmq:3-management
    ports:
      - "5671:5671"
      - "5672:5672"
      - "4369:4369"
      - "25672:25672"
      - "15672:15672"
    volumes:
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    healthcheck:
      test: nc -z localhost:5672

  mongodb1:
    image: mongo
    ports:
      - 27017:27017
    restart: always
    # volumes:
    #   - ./mongo-replicaset.sh:/docker-entrypoint-initdb.d/mongo-replicaset.sh
    command: --replSet rs0 --bind_ip localhost,mongodb1,127.0.0.1 --port 27017
      
  inbound:
    build:
      context: .
      dockerfile: infrastructure/inbound/Dockerfile
      target: dev
    env_file:
      - infrastructure/inbound/.env
    volumes:
      - ./infrastructure/inbound:/code:Z
      - ./.mvn:/code/.mvn:Z
    depends_on:
      - mongodb1
      - mosquitto
      - rabbitmq-outbound
    working_dir: /code
    command: ["./mvnw -B compile quarkus:dev"]
    ports:
      - "${EXPOSED_INBOUND_REST_PORT}:8080"

  notifier:
    build:
      context: infrastructure/notifier/
      dockerfile: Dockerfile
    depends_on:
      - mongodb1
      - rabbitmq-outbound
    env_file:
      infrastructure/notifier/.env
    # working_dir: /code
    command: npm run start

  outbound:
    build:
      context: .
      dockerfile: infrastructure/router/Dockerfile
      target: dev
    env_file:
      - infrastructure/router/.env
    volumes:
      - ./infrastructure/router:/code:Z
      - ./.mvn:/code/.mvn:Z
    depends_on:
      - rabbitmq-outbound
    working_dir: /code
    ports:
      - "8081:8081"
    ## with host we can connect using host machine address, otherwise we use service name host
    # network_mode: host
    command: ["./mvnw -B compile quarkus:dev"]

  transformer:
    build:
      context: .
      dockerfile: infrastructure/transformer/Dockerfile
      target: dev
    env_file:
      - infrastructure/transformer/.env
    volumes:
      - ./infrastructure/transformer:/code:Z
      - ./.mvn:/code/.mvn:Z
    depends_on:
      - rabbitmq-outbound
    working_dir: /code
    ## with host we can connect using host machine address, otherwise we use service name host
    # network_mode: host
    command: ["./mvnw -B compile quarkus:dev"]

  transformer2:
    build:
      context: .
      dockerfile: infrastructure/transformer/Dockerfile
      target: dev
    env_file:
      - infrastructure/transformer/.env
    volumes:
      - ./infrastructure/transformer:/code:Z
      - ./.mvn:/code/.mvn:Z
    depends_on:
      - rabbitmq-outbound
    working_dir: /code
    ## with host we can connect using host machine address, otherwise we use service name host
    # network_mode: host
    command: ["./mvnw -B compile quarkus:dev"]
